/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PrivateVault, PrivateVaultInterface } from "../PrivateVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_caller",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DOMAIN_NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN_TYPE_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GET_PRIVATE_DATA_BY_INDEX_PERMIT_TYPE_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GET_PRIVATE_DATA_BY_NAME_PERMIT_TYPE_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LABEL_EXIST_PERMIT_TYPE_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LABEL_NAME_PERMIT_TYPE_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SAVE_WITHOUT_MINTING_PERMIT_TYPE_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SAVE_WITH_MINTING_PERMIT_TYPE_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "index",
        type: "uint64",
      },
    ],
    name: "getPrivateDataByIndex",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "index",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "getPrivateDataByIndexDirectly",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "name",
        type: "address",
      },
    ],
    name: "getPrivateDataByName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "name",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "getPrivateDataByNameDirectly",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "labelHash",
        type: "address",
      },
    ],
    name: "labelIsExist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "labelHash",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "labelIsExistDirectly",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "index",
        type: "uint64",
      },
    ],
    name: "labelName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "index",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "labelNameDirectly",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
      {
        internalType: "string",
        name: "cryptoLabel",
        type: "string",
      },
      {
        internalType: "address",
        name: "labelHash",
        type: "address",
      },
    ],
    name: "saveWithMinting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
      {
        internalType: "string",
        name: "cryptoLabel",
        type: "string",
      },
      {
        internalType: "address",
        name: "labelHash",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "saveWithMintingDirectly",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
      {
        internalType: "string",
        name: "cryptoLabel",
        type: "string",
      },
      {
        internalType: "address",
        name: "labelHash",
        type: "address",
      },
    ],
    name: "saveWithoutMinting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
      {
        internalType: "string",
        name: "cryptoLabel",
        type: "string",
      },
      {
        internalType: "address",
        name: "labelHash",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "saveWithoutMintingDirectly",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "total",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001c0938038062001c09833981016040819052620000349162000182565b604080518082018252601981527f707269766174655661756c7440736565646c6973742e6f7267000000000000006020918201528151808301835260058152640312e302e360dc1b9082015281517fdad980a10e49615eb7fc5d7774307c8f04d959ac46349850121d52b1e409fc1e818301527f524897c45a2b08b64fa5a5db0ba55d51bd9bba5ea1fb261f9101b9f6b46f193f818401527f06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c60608201524660808201523060a0808301919091528351808303909101815260c09091019092528151910120600755600080546001600160a01b0319166001600160a01b0393841617905560018054600680546001600160401b0319169055919092166001600160a81b0319909116179055620001ba565b80516001600160a01b03811681146200017d57600080fd5b919050565b600080604083850312156200019657600080fd5b620001a18362000165565b9150620001b16020840162000165565b90509250929050565b611a3f80620001ca6000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c8063796f077b116100c3578063c4dfc5ad1161007c578063c4dfc5ad1461037e578063d016133514610391578063d866517f146103b8578063e79c78ce146103cb578063f156b1bf146103f2578063f2e4e4841461040557600080fd5b8063796f077b146102aa578063a21a0d76146102e6578063acb8cc491461030d578063ad3d5e3814610331578063b5802dad14610344578063c0993eea1461035757600080fd5b80634a8bb379116101155780634a8bb379146102165780634f02c420146102365780635a724e271461024a578063653045eb1461025d57806373b26be314610270578063763cd53b1461028357600080fd5b806301335ffd1461015d57806313706f10146101855780631c8ff520146101ba57806327513b70146101cf5780632ddbd13a146101e25780633644e5151461020d575b600080fd5b61017061016b3660046114fe565b61042c565b60405190151581526020015b60405180910390f35b6101ac7f8774f567563ee2634c371978f5cfa8e41e5d255912344cb6b7d652f94c66c8a481565b60405190815260200161017c565b6101cd6101c83660046115ee565b610461565b005b6101cd6101dd3660046115ee565b610612565b6006546101f5906001600160401b031681565b6040516001600160401b03909116815260200161017c565b6101ac60075481565b610229610224366004611678565b610752565b60405161017c91906116c9565b60015461017090600160a01b900460ff1681565b610229610258366004611678565b610876565b61022961026b3660046114fe565b6108da565b61022961027e3660046116fc565b61096a565b6101ac7f6681e086fd2042ee88d7eb0f54dbe27796a216fb36f4e834a75b15d90b08272781565b6102296040518060400160405280601981526020017f707269766174655661756c7440736565646c6973742e6f72670000000000000081525081565b6101ac7fcbb2475c190d2e287f7de56c688846f7612f70b210a3856ad34c475cbad0dda781565b610229604051806040016040528060058152602001640312e302e360dc1b81525081565b61022961033f36600461171e565b610a9e565b6101706103523660046116fc565b610b1f565b6101ac7fdad980a10e49615eb7fc5d7774307c8f04d959ac46349850121d52b1e409fc1e81565b61022961038c36600461171e565b610b6b565b6101ac7f5e9a0e1424c7f33522faa862eafa09a676e96246da16c8b58d5803ba8010584f81565b6101cd6103c6366004611739565b610c25565b6101ac7f17558919af4007c4fb94572ba8e807922ff7db103814e127ad21ef481ca35d9881565b6101cd610400366004611739565b610d50565b6101ac7f91fb9dd060bd9ffe42a43373e9de88b3a9b106cbce07f242fd6f2c4a41ef921d81565b600061043b8686868686610ee3565b506001600160a01b03851660009081526002602052604090205460ff1695945050505050565b6001546001600160a01b031633146104945760405162461bcd60e51b815260040161048b906117da565b60405180910390fd5b600154600160a01b900460ff16156104e85760405162461bcd60e51b8152602060048201526017602482015276736565646c6973743a206d696e742068617320646f6e6560481b604482015260640161048b565b6001600160a01b03811660009081526002602052604090205460ff16156105215760405162461bcd60e51b815260040161048b90611805565b6001600160a01b0381166000908152600560209081526040909120845161054a9286019061143d565b506006546001600160401b0316600090815260036020908152604080832080546001600160a01b0319166001600160a01b038616908117909155835260048252909120835161059b9285019061143d565b50600680546001600160401b03169060006105b58361182e565b82546001600160401b039182166101009390930a9283029190920219909116179055506001600160a01b03166000908152600260205260409020805460ff19166001908117909155805460ff60a01b1916600160a01b1790555050565b6001546001600160a01b0316331461063c5760405162461bcd60e51b815260040161048b906117da565b6001600160a01b03811660009081526002602052604090205460ff16156106755760405162461bcd60e51b815260040161048b90611805565b6001600160a01b0381166000908152600560209081526040909120845161069e9286019061143d565b506006546001600160401b0316600090815260036020908152604080832080546001600160a01b0319166001600160a01b03861690811790915583526004825290912083516106ef9285019061143d565b50600680546001600160401b03169060006107098361182e565b82546001600160401b039182166101009390930a9283029190920219909116179055506001600160a01b03166000908152600260205260409020805460ff191660011790555050565b6006546060906001600160401b038088169116116107a75760405162461bcd60e51b815260206004820152601260248201527144617461206b657973206f766572666c6f7760701b604482015260640161048b565b6107b48686868686610fac565b6001600160401b0386166000908152600360209081526040808320546001600160a01b031683526005909152902080546107ed90611863565b80601f016020809104026020016040519081016040528092919081815260200182805461081990611863565b80156108665780601f1061083b57610100808354040283529160200191610866565b820191906000526020600020905b81548152906001019060200180831161084957829003601f168201915b5050505050905095945050505050565b6006546060906001600160401b039081169087161061089457600080fd5b6108a1868686868661106d565b6001600160401b0386166000908152600360209081526040808320546001600160a01b031683526004909152902080546107ed90611863565b60606108e9868686868661112e565b6001600160a01b03861660009081526002602052604090205460ff1615156001146109475760405162461bcd60e51b815260206004820152600e60248201526d131858995b081b9bc8195e1a5cdd60921b604482015260640161048b565b6001600160a01b038616600090815260056020526040902080546107ed90611863565b6001546060906001600160a01b031633146109975760405162461bcd60e51b815260040161048b906117da565b6001600160a01b03821660009081526002602052604090205460ff1615156001146109f55760405162461bcd60e51b815260206004820152600e60248201526d131858995b081b9bc8195e1a5cdd60921b604482015260640161048b565b6001600160a01b03821660009081526005602052604090208054610a1890611863565b80601f0160208091040260200160405190810160405280929190818152602001828054610a4490611863565b8015610a915780601f10610a6657610100808354040283529160200191610a91565b820191906000526020600020905b815481529060010190602001808311610a7457829003601f168201915b505050505090505b919050565b6001546060906001600160a01b03163314610acb5760405162461bcd60e51b815260040161048b906117da565b6006546001600160401b0390811690831610610ae657600080fd5b6001600160401b0382166000908152600360209081526040808320546001600160a01b03168352600490915290208054610a1890611863565b6001546000906001600160a01b03163314610b4c5760405162461bcd60e51b815260040161048b906117da565b506001600160a01b031660009081526002602052604090205460ff1690565b6001546060906001600160a01b03163314610b985760405162461bcd60e51b815260040161048b906117da565b6006546001600160401b03808416911611610bec5760405162461bcd60e51b81526020600482015260146024820152734c6162656c73206b657973206f766572666c6f7760601b604482015260640161048b565b6001600160401b0382166000908152600360209081526040808320546001600160a01b03168352600590915290208054610a1890611863565b610c34878787878787876111d2565b6001600160a01b03851660009081526002602052604090205460ff1615610c6d5760405162461bcd60e51b815260040161048b90611805565b6001600160a01b03851660009081526005602090815260409091208851610c96928a019061143d565b506006546001600160401b0316600090815260036020908152604080832080546001600160a01b0319166001600160a01b038a169081179091558352600482529091208751610ce79289019061143d565b50600680546001600160401b0316906000610d018361182e565b82546001600160401b039182166101009390930a92830291909202199091161790555050506001600160a01b039092166000908152600260205260409020805460ff1916600117905550505050565b600154600160a01b900460ff1615610da45760405162461bcd60e51b8152602060048201526017602482015276736565646c6973743a206d696e742068617320646f6e6560481b604482015260640161048b565b610db387878787878787611284565b6001600160a01b03851660009081526002602052604090205460ff1615610dec5760405162461bcd60e51b815260040161048b90611805565b6001600160a01b03851660009081526005602090815260409091208851610e15928a019061143d565b506006546001600160401b0316600090815260036020908152604080832080546001600160a01b0319166001600160a01b038a169081179091558352600482529091208751610e669289019061143d565b50600680546001600160401b0316906000610e808361182e565b82546001600160401b039182166101009390930a92830291909202199091161790555050506001600160a01b039092166000908152600260205260409020805460ff19166001908117909155805460ff60a01b1916600160a01b17905550505050565b42841015610f035760405162461bcd60e51b815260040161048b9061189e565b60008054600754604051610f4a926001600160a01b03169189918991907f5e9a0e1424c7f33522faa862eafa09a676e96246da16c8b58d5803ba8010584f906020016118ce565b604051602081830303815290604052805190602001209050610fa4818585856040518060400160405280601f81526020017f7661756c743a206c6162656c206578697374207065726d6974204552524f5200815250611328565b505050505050565b42841015610fcc5760405162461bcd60e51b815260040161048b9061189e565b60008054600754604051611013926001600160a01b03169189918991907f17558919af4007c4fb94572ba8e807922ff7db103814e127ad21ef481ca35d9890602001611909565b604051602081830303815290604052805190602001209050610fa4818585856040518060400160405280601f81526020017f7661756c743a20696e646578206c6162656c207065726d6974204552524f5200815250611328565b4284101561108d5760405162461bcd60e51b815260040161048b9061189e565b600080546007546040516110d4926001600160a01b03169189918991907fcbb2475c190d2e287f7de56c688846f7612f70b210a3856ad34c475cbad0dda790602001611909565b604051602081830303815290604052805190602001209050610fa4818585856040518060400160405280601e81526020017f7661756c743a206c6162656c206e616d65207065726d6974204552524f520000815250611328565b4284101561114e5760405162461bcd60e51b815260040161048b9061189e565b60008054600754604051611195926001600160a01b03169189918991907f91fb9dd060bd9ffe42a43373e9de88b3a9b106cbce07f242fd6f2c4a41ef921d906020016118ce565b604051602081830303815290604052805190602001209050610fa481858585604051806060016040528060248152602001611a0f60249139611328565b428410156111f25760405162461bcd60e51b815260040161048b9061189e565b6000805460075460405161123d926001600160a01b0316918b918b918b918b91907f6681e086fd2042ee88d7eb0f54dbe27796a216fb36f4e834a75b15d90b0827279060200161194d565b60405160208183030381529060405280519060200120905061127a818585856040518060600160405280602881526020016119c260289139611328565b5050505050505050565b428410156112a45760405162461bcd60e51b815260040161048b9061189e565b600080546007546040516112ef926001600160a01b0316918b918b918b918b91907f8774f567563ee2634c371978f5cfa8e41e5d255912344cb6b7d652f94c66c8a49060200161194d565b60405160208183030381529060405280519060200120905061127a818585856040518060600160405280602581526020016119ea602591395b60008560405160200161133d91815260200190565b60405160208183030381529060405280519060200120905060008160405160200161139491907f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c810191909152603c0190565b60408051808303601f1901815282825280516020918201206000805490855291840180845281905260ff8a169284019290925260608301889052608083018790529092506001600160a01b03169060019060a0016020604051602081039080840390855afa15801561140a573d6000803e3d6000fd5b505050602060405103516001600160a01b031614839061127a5760405162461bcd60e51b815260040161048b91906116c9565b82805461144990611863565b90600052602060002090601f01602090048101928261146b57600085556114b1565b82601f1061148457805160ff19168380011785556114b1565b828001600101855582156114b1579182015b828111156114b1578251825591602001919060010190611496565b506114bd9291506114c1565b5090565b5b808211156114bd57600081556001016114c2565b80356001600160a01b0381168114610a9957600080fd5b803560ff81168114610a9957600080fd5b600080600080600060a0868803121561151657600080fd5b61151f866114d6565b945060208601359350611534604087016114ed565b94979396509394606081013594506080013592915050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261157357600080fd5b81356001600160401b038082111561158d5761158d61154c565b604051601f8301601f19908116603f011681019082821181831017156115b5576115b561154c565b816040528381528660208588010111156115ce57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561160357600080fd5b83356001600160401b038082111561161a57600080fd5b61162687838801611562565b9450602086013591508082111561163c57600080fd5b5061164986828701611562565b925050611658604085016114d6565b90509250925092565b80356001600160401b0381168114610a9957600080fd5b600080600080600060a0868803121561169057600080fd5b61151f86611661565b60005b838110156116b457818101518382015260200161169c565b838111156116c3576000848401525b50505050565b60208152600082518060208401526116e8816040850160208701611699565b601f01601f19169190910160400192915050565b60006020828403121561170e57600080fd5b611717826114d6565b9392505050565b60006020828403121561173057600080fd5b61171782611661565b600080600080600080600060e0888a03121561175457600080fd5b87356001600160401b038082111561176b57600080fd5b6117778b838c01611562565b985060208a013591508082111561178d57600080fd5b5061179a8a828b01611562565b9650506117a9604089016114d6565b9450606088013593506117be608089016114ed565b925060a0880135915060c0880135905092959891949750929550565b60208082526011908201527010d85b1b195c881a5cc81a5b9d985b1a59607a1b604082015260600190565b6020808252600f908201526e131858995b081a185cc8195e1a5cdd608a1b604082015260600190565b60006001600160401b038083168181141561185957634e487b7160e01b600052601160045260246000fd5b6001019392505050565b600181811c9082168061187757607f821691505b6020821081141561189857634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252601690820152751d985d5b1d0e88195e1958dd5d19481d1a5b595bdd5d60521b604082015260600190565b6bffffffffffffffffffffffff19606096871b811682529490951b909316601485015260288401919091526048830152606882015260880190565b60609590951b6bffffffffffffffffffffffff1916855260c09390931b6001600160c01b0319166014850152601c840191909152603c830152605c820152607c0190565b60006bffffffffffffffffffffffff19808a60601b1683528851611978816014860160208d01611699565b88519084019061198f816014840160208d01611699565b60609890981b91909116960160148101969096525050602884019290925260488301526068820152608801939250505056fe7661756c743a207361766520776974686f7574206d696e74696e67207065726d6974204552524f527661756c743a20736176652077697468206d696e74696e67207065726d6974204552524f527661756c743a206765742064617461206279206e616d65207065726d6974204552524f52a164736f6c634300080c000a";

type PrivateVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PrivateVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PrivateVault__factory extends ContractFactory {
  constructor(...args: PrivateVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _signer: string,
    _caller: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PrivateVault> {
    return super.deploy(
      _signer,
      _caller,
      overrides || {}
    ) as Promise<PrivateVault>;
  }
  override getDeployTransaction(
    _signer: string,
    _caller: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_signer, _caller, overrides || {});
  }
  override attach(address: string): PrivateVault {
    return super.attach(address) as PrivateVault;
  }
  override connect(signer: Signer): PrivateVault__factory {
    return super.connect(signer) as PrivateVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PrivateVaultInterface {
    return new utils.Interface(_abi) as PrivateVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PrivateVault {
    return new Contract(address, _abi, signerOrProvider) as PrivateVault;
  }
}
