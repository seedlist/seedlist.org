/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PrivateVault, PrivateVaultInterface } from "../PrivateVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
      {
        internalType: "address",
        name: "_caller",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "DOMAIN_NAME",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN_TYPE_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DOMAIN_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GET_PRIVATE_DATA_BY_INDEX_PERMIT_TYPE_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "GET_PRIVATE_DATA_BY_NAME_PERMIT_TYPE_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LABEL_NAME_PERMIT_TYPE_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SAVE_WITHOUT_MINTING_PERMIT_TYPE_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SAVE_WITH_MINTING_PERMIT_TYPE_HASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "index",
        type: "uint64",
      },
    ],
    name: "getPrivateDataByIndex",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "index",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "getPrivateDataByIndexDirectly",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "name",
        type: "address",
      },
    ],
    name: "getPrivateDataByName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "name",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "getPrivateDataByNameDirectly",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "index",
        type: "uint64",
      },
    ],
    name: "labelName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "index",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "labelNameDirectly",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
      {
        internalType: "string",
        name: "cryptoLabel",
        type: "string",
      },
      {
        internalType: "address",
        name: "labelHash",
        type: "address",
      },
    ],
    name: "saveWithMinting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
      {
        internalType: "string",
        name: "cryptoLabel",
        type: "string",
      },
      {
        internalType: "address",
        name: "labelHash",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "saveWithMintingDirectly",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
      {
        internalType: "string",
        name: "cryptoLabel",
        type: "string",
      },
      {
        internalType: "address",
        name: "labelHash",
        type: "address",
      },
    ],
    name: "saveWithoutMinting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "data",
        type: "string",
      },
      {
        internalType: "string",
        name: "cryptoLabel",
        type: "string",
      },
      {
        internalType: "address",
        name: "labelHash",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "saveWithoutMintingDirectly",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "total",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001a3c38038062001a3c833981016040819052620000349162000182565b604080518082018252601981527f707269766174655661756c7440736565646c6973742e6f7267000000000000006020918201528151808301835260058152640312e302e360dc1b9082015281517fdad980a10e49615eb7fc5d7774307c8f04d959ac46349850121d52b1e409fc1e818301527f524897c45a2b08b64fa5a5db0ba55d51bd9bba5ea1fb261f9101b9f6b46f193f818401527f06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c60608201524660808201523060a0808301919091528351808303909101815260c09091019092528151910120600755600080546001600160a01b0319166001600160a01b0393841617905560018054600680546001600160401b0319169055919092166001600160a81b0319909116179055620001ba565b80516001600160a01b03811681146200017d57600080fd5b919050565b600080604083850312156200019657600080fd5b620001a18362000165565b9150620001b16020840162000165565b90509250929050565b61187280620001ca6000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c8063763cd53b116100b8578063c0993eea1161007c578063c0993eea14610310578063c4dfc5ad14610337578063d866517f1461034a578063e79c78ce1461035d578063f156b1bf14610384578063f2e4e4841461039757600080fd5b8063763cd53b1461024f578063796f077b14610276578063a21a0d76146102b2578063acb8cc49146102d9578063ad3d5e38146102fd57600080fd5b80634a8bb379116100ff5780634a8bb379146101d25780634f02c420146101f25780635a724e2714610216578063653045eb1461022957806373b26be31461023c57600080fd5b806313706f101461013c5780631c8ff5201461017657806327513b701461018b5780632ddbd13a1461019e5780633644e515146101c9575b600080fd5b6101637f8774f567563ee2634c371978f5cfa8e41e5d255912344cb6b7d652f94c66c8a481565b6040519081526020015b60405180910390f35b6101896101843660046113fd565b6103be565b005b6101896101993660046113fd565b61056f565b6006546101b1906001600160401b031681565b6040516001600160401b03909116815260200161016d565b61016360075481565b6101e56101e0366004611498565b6106af565b60405161016d9190611516565b60015461020690600160a01b900460ff1681565b604051901515815260200161016d565b6101e5610224366004611498565b6107d3565b6101e5610237366004611549565b610837565b6101e561024a36600461156a565b6108c7565b6101637f6681e086fd2042ee88d7eb0f54dbe27796a216fb36f4e834a75b15d90b08272781565b6101e56040518060400160405280601981526020017f707269766174655661756c7440736565646c6973742e6f72670000000000000081525081565b6101637fcbb2475c190d2e287f7de56c688846f7612f70b210a3856ad34c475cbad0dda781565b6101e5604051806040016040528060058152602001640312e302e360dc1b81525081565b6101e561030b36600461158c565b6109fb565b6101637fdad980a10e49615eb7fc5d7774307c8f04d959ac46349850121d52b1e409fc1e81565b6101e561034536600461158c565b610a7c565b6101896103583660046115a7565b610b36565b6101637f17558919af4007c4fb94572ba8e807922ff7db103814e127ad21ef481ca35d9881565b6101896103923660046115a7565b610c61565b6101637f91fb9dd060bd9ffe42a43373e9de88b3a9b106cbce07f242fd6f2c4a41ef921d81565b6001546001600160a01b031633146103f15760405162461bcd60e51b81526004016103e890611648565b60405180910390fd5b600154600160a01b900460ff16156104455760405162461bcd60e51b8152602060048201526017602482015276736565646c6973743a206d696e742068617320646f6e6560481b60448201526064016103e8565b6001600160a01b03811660009081526002602052604090205460ff161561047e5760405162461bcd60e51b81526004016103e890611673565b6001600160a01b038116600090815260056020908152604090912084516104a7928601906112ab565b506006546001600160401b0316600090815260036020908152604080832080546001600160a01b0319166001600160a01b03861690811790915583526004825290912083516104f8928501906112ab565b50600680546001600160401b03169060006105128361169c565b82546001600160401b039182166101009390930a9283029190920219909116179055506001600160a01b03166000908152600260205260409020805460ff19166001908117909155805460ff60a01b1916600160a01b1790555050565b6001546001600160a01b031633146105995760405162461bcd60e51b81526004016103e890611648565b6001600160a01b03811660009081526002602052604090205460ff16156105d25760405162461bcd60e51b81526004016103e890611673565b6001600160a01b038116600090815260056020908152604090912084516105fb928601906112ab565b506006546001600160401b0316600090815260036020908152604080832080546001600160a01b0319166001600160a01b038616908117909155835260048252909120835161064c928501906112ab565b50600680546001600160401b03169060006106668361169c565b82546001600160401b039182166101009390930a9283029190920219909116179055506001600160a01b03166000908152600260205260409020805460ff191660011790555050565b6006546060906001600160401b038088169116116107045760405162461bcd60e51b815260206004820152601260248201527144617461206b657973206f766572666c6f7760701b60448201526064016103e8565b6107118686868686610df4565b6001600160401b0386166000908152600360209081526040808320546001600160a01b0316835260059091529020805461074a906116d1565b80601f0160208091040260200160405190810160405280929190818152602001828054610776906116d1565b80156107c35780601f10610798576101008083540402835291602001916107c3565b820191906000526020600020905b8154815290600101906020018083116107a657829003601f168201915b5050505050905095945050505050565b6006546060906001600160401b03908116908716106107f157600080fd5b6107fe8686868686610ebd565b6001600160401b0386166000908152600360209081526040808320546001600160a01b0316835260049091529020805461074a906116d1565b60606108468686868686610f7e565b6001600160a01b03861660009081526002602052604090205460ff1615156001146108a45760405162461bcd60e51b815260206004820152600e60248201526d131858995b081b9bc8195e1a5cdd60921b60448201526064016103e8565b6001600160a01b0386166000908152600560205260409020805461074a906116d1565b6001546060906001600160a01b031633146108f45760405162461bcd60e51b81526004016103e890611648565b6001600160a01b03821660009081526002602052604090205460ff1615156001146109525760405162461bcd60e51b815260206004820152600e60248201526d131858995b081b9bc8195e1a5cdd60921b60448201526064016103e8565b6001600160a01b03821660009081526005602052604090208054610975906116d1565b80601f01602080910402602001604051908101604052809291908181526020018280546109a1906116d1565b80156109ee5780601f106109c3576101008083540402835291602001916109ee565b820191906000526020600020905b8154815290600101906020018083116109d157829003601f168201915b505050505090505b919050565b6001546060906001600160a01b03163314610a285760405162461bcd60e51b81526004016103e890611648565b6006546001600160401b0390811690831610610a4357600080fd5b6001600160401b0382166000908152600360209081526040808320546001600160a01b03168352600490915290208054610975906116d1565b6001546060906001600160a01b03163314610aa95760405162461bcd60e51b81526004016103e890611648565b6006546001600160401b03808416911611610afd5760405162461bcd60e51b81526020600482015260146024820152734c6162656c73206b657973206f766572666c6f7760601b60448201526064016103e8565b6001600160401b0382166000908152600360209081526040808320546001600160a01b03168352600590915290208054610975906116d1565b610b4587878787878787611040565b6001600160a01b03851660009081526002602052604090205460ff1615610b7e5760405162461bcd60e51b81526004016103e890611673565b6001600160a01b03851660009081526005602090815260409091208851610ba7928a01906112ab565b506006546001600160401b0316600090815260036020908152604080832080546001600160a01b0319166001600160a01b038a169081179091558352600482529091208751610bf8928901906112ab565b50600680546001600160401b0316906000610c128361169c565b82546001600160401b039182166101009390930a92830291909202199091161790555050506001600160a01b039092166000908152600260205260409020805460ff1916600117905550505050565b600154600160a01b900460ff1615610cb55760405162461bcd60e51b8152602060048201526017602482015276736565646c6973743a206d696e742068617320646f6e6560481b60448201526064016103e8565b610cc4878787878787876110f2565b6001600160a01b03851660009081526002602052604090205460ff1615610cfd5760405162461bcd60e51b81526004016103e890611673565b6001600160a01b03851660009081526005602090815260409091208851610d26928a01906112ab565b506006546001600160401b0316600090815260036020908152604080832080546001600160a01b0319166001600160a01b038a169081179091558352600482529091208751610d77928901906112ab565b50600680546001600160401b0316906000610d918361169c565b82546001600160401b039182166101009390930a92830291909202199091161790555050506001600160a01b039092166000908152600260205260409020805460ff19166001908117909155805460ff60a01b1916600160a01b17905550505050565b42841015610e145760405162461bcd60e51b81526004016103e89061170c565b60008054600754604051610e5b926001600160a01b03169189918991907f17558919af4007c4fb94572ba8e807922ff7db103814e127ad21ef481ca35d989060200161173c565b604051602081830303815290604052805190602001209050610eb5818585856040518060400160405280601f81526020017f7661756c743a20696e646578206c6162656c207065726d6974204552524f5200815250611196565b505050505050565b42841015610edd5760405162461bcd60e51b81526004016103e89061170c565b60008054600754604051610f24926001600160a01b03169189918991907fcbb2475c190d2e287f7de56c688846f7612f70b210a3856ad34c475cbad0dda79060200161173c565b604051602081830303815290604052805190602001209050610eb5818585856040518060400160405280601e81526020017f7661756c743a206c6162656c206e616d65207065726d6974204552524f520000815250611196565b42841015610f9e5760405162461bcd60e51b81526004016103e89061170c565b600080546007546040516bffffffffffffffffffffffff19606093841b811660208301529289901b90921660348301526048820187905260688201527f91fb9dd060bd9ffe42a43373e9de88b3a9b106cbce07f242fd6f2c4a41ef921d608882015260a801604051602081830303815290604052805190602001209050610eb58185858560405180606001604052806024815260200161184260249139611196565b428410156110605760405162461bcd60e51b81526004016103e89061170c565b600080546007546040516110ab926001600160a01b0316918b918b918b918b91907f6681e086fd2042ee88d7eb0f54dbe27796a216fb36f4e834a75b15d90b08272790602001611780565b6040516020818303038152906040528051906020012090506110e8818585856040518060600160405280602881526020016117f560289139611196565b5050505050505050565b428410156111125760405162461bcd60e51b81526004016103e89061170c565b6000805460075460405161115d926001600160a01b0316918b918b918b918b91907f8774f567563ee2634c371978f5cfa8e41e5d255912344cb6b7d652f94c66c8a490602001611780565b6040516020818303038152906040528051906020012090506110e88185858560405180606001604052806025815260200161181d602591395b6000856040516020016111ab91815260200190565b60405160208183030381529060405280519060200120905060008160405160200161120291907f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c810191909152603c0190565b60408051808303601f1901815282825280516020918201206000805490855291840180845281905260ff8a169284019290925260608301889052608083018790529092506001600160a01b03169060019060a0016020604051602081039080840390855afa158015611278573d6000803e3d6000fd5b505050602060405103516001600160a01b03161483906110e85760405162461bcd60e51b81526004016103e89190611516565b8280546112b7906116d1565b90600052602060002090601f0160209004810192826112d9576000855561131f565b82601f106112f257805160ff191683800117855561131f565b8280016001018555821561131f579182015b8281111561131f578251825591602001919060010190611304565b5061132b92915061132f565b5090565b5b8082111561132b5760008155600101611330565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261136b57600080fd5b81356001600160401b038082111561138557611385611344565b604051601f8301601f19908116603f011681019082821181831017156113ad576113ad611344565b816040528381528660208588010111156113c657600080fd5b836020870160208301376000602085830101528094505050505092915050565b80356001600160a01b03811681146109f657600080fd5b60008060006060848603121561141257600080fd5b83356001600160401b038082111561142957600080fd5b6114358783880161135a565b9450602086013591508082111561144b57600080fd5b506114588682870161135a565b925050611467604085016113e6565b90509250925092565b80356001600160401b03811681146109f657600080fd5b803560ff811681146109f657600080fd5b600080600080600060a086880312156114b057600080fd5b6114b986611470565b9450602086013593506114ce60408701611487565b94979396509394606081013594506080013592915050565b60005b838110156115015781810151838201526020016114e9565b83811115611510576000848401525b50505050565b60208152600082518060208401526115358160408501602087016114e6565b601f01601f19169190910160400192915050565b600080600080600060a0868803121561156157600080fd5b6114b9866113e6565b60006020828403121561157c57600080fd5b611585826113e6565b9392505050565b60006020828403121561159e57600080fd5b61158582611470565b600080600080600080600060e0888a0312156115c257600080fd5b87356001600160401b03808211156115d957600080fd5b6115e58b838c0161135a565b985060208a01359150808211156115fb57600080fd5b506116088a828b0161135a565b965050611617604089016113e6565b94506060880135935061162c60808901611487565b925060a0880135915060c0880135905092959891949750929550565b60208082526011908201527010d85b1b195c881a5cc81a5b9d985b1a59607a1b604082015260600190565b6020808252600f908201526e131858995b081a185cc8195e1a5cdd608a1b604082015260600190565b60006001600160401b03808316818114156116c757634e487b7160e01b600052601160045260246000fd5b6001019392505050565b600181811c908216806116e557607f821691505b6020821081141561170657634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252601690820152751d985d5b1d0e88195e1958dd5d19481d1a5b595bdd5d60521b604082015260600190565b60609590951b6bffffffffffffffffffffffff1916855260c09390931b6001600160c01b0319166014850152601c840191909152603c830152605c820152607c0190565b60006bffffffffffffffffffffffff19808a60601b16835288516117ab816014860160208d016114e6565b8851908401906117c2816014840160208d016114e6565b60609890981b91909116960160148101969096525050602884019290925260488301526068820152608801939250505056fe7661756c743a207361766520776974686f7574206d696e74696e67207065726d6974204552524f527661756c743a20736176652077697468206d696e74696e67207065726d6974204552524f527661756c743a206765742064617461206279206e616d65207065726d6974204552524f52a164736f6c634300080c000a";

type PrivateVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PrivateVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PrivateVault__factory extends ContractFactory {
  constructor(...args: PrivateVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _signer: string,
    _caller: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PrivateVault> {
    return super.deploy(
      _signer,
      _caller,
      overrides || {}
    ) as Promise<PrivateVault>;
  }
  override getDeployTransaction(
    _signer: string,
    _caller: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_signer, _caller, overrides || {});
  }
  override attach(address: string): PrivateVault {
    return super.attach(address) as PrivateVault;
  }
  override connect(signer: Signer): PrivateVault__factory {
    return super.connect(signer) as PrivateVault__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PrivateVaultInterface {
    return new utils.Interface(_abi) as PrivateVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PrivateVault {
    return new Contract(address, _abi, signerOrProvider) as PrivateVault;
  }
}
